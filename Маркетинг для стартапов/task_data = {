<h3>Справка по применению логических операторов в программах на С для микроконтроллеров.</h3>
<p>Приведем примеры использования некоторых операторов для задания значения регистров ввода-вывода. Рассмотрим выражение</p>
<p>PORTD&nbsp;= (1 &lt;&lt; 3);</p>
<p>Здесь регистру PORTD&nbsp;оператором = присваивается результат операции (1&lt;&lt;3). Операция &lt;&lt; выполняет поразрядный сдвиг числа, указанного слева от оператора &lt;&lt; на количество разрядов, указанное справа от &lt;&lt;. В данном случае число справа &ndash; это десятичная единица, или в двоичной системе 0b00000001, или 0х01 в шестнадцатеричной системе счисления. Сдвиг на три разряда влево будет произведен следующим образом:</p>
<p>0b00000001 -&gt; &nbsp;0b00001000 &ndash; единица переместилась из нулевого разряда в третий.</p>
<p>Таким образом, в регистр PORTD&nbsp;будет записано число 0b00001000 (0х08). Рассмотрим следующее выражение:</p>
<p>PORTD&nbsp;|= (1 &lt;&lt; 3);</p>
<p>Здесь для формирования содержимого регистра PORTD&nbsp;использованы следующие операторы: | - поразрядное логическое ИЛИ, &lt;&lt; - поразрядный сдвиг влево, = - присваивание. Компилятор выполняет указанное выражение в следующем порядке:</p>
<p>1) число 0b00000001 (0x01) сдвинуть на три разряда влево. Результат &ndash; число 0b00001000 (0x08);</p>
<p>2) выполнить операцию поразрядное логическое ИЛИ между текущим значением регистра PORTD&nbsp;и числом 0b00001000 (0x08). Операция |= позволяет более кратко записать выражение PORTD&nbsp;= PORTD&nbsp;| (1&lt;&lt;3);</p>
<p>3) записать в регистр PORTD&nbsp;результат предыдущей операции.</p>
<p>Таким образом можно установить нужный бит в регистре, не изменяя значений остальных битов, поскольку со всеми разрядами кроме третьего в данном случае выполняется логическое ИЛИ с нулем.</p>
<p>Пользуясь последним выражением, можно установить не один, а несколько битов в регистре, например:</p>
<p>PORTD&nbsp;|= (1 &lt;&lt; 3) | (1 &lt;&lt; 4) | (1 &lt;&lt; 2);</p>
<p>В регистр PORTD&nbsp;будет записан результат поразрядного ИЛИ между числами: 0b00001000 | 0b00010000 | 0b00000100 , то есть число 0b00011100.</p>
<p>Чтобы подобным образом обнулить нужный бит/биты, можно воспользоваться выражениями</p>
<p>PORTD&nbsp;&amp;= ~(1 &lt;&lt; 3);</p>
<p>PORTD&nbsp;&amp;= ~( (1 &lt;&lt; 3) | (1 &lt;&lt; 4) | (1 &lt;&lt; 2) );</p>
<p>Здесь применяется операция &amp; поразрядного логического И и операция ~ поразрядной инверсии. Порядок выполнения этих выражений компилятором:</p>
<p>1) вычислить выражения в скобках:</p>
<p>1 &lt;&lt; 3 = 0b00001000</p>
<p>(1 &lt;&lt; 3) | (1 &lt;&lt; 4) | (1 &lt;&lt; 2) = 0b00011100</p>
<p>2) выполнить поразрядную инверсию полученного числа:</p>
<p>~0b00001000 = 0b11110111</p>
<p>~0b00011100 = 0b11100011</p>
<p>3) выполнить операцию поразрядное логическое И между текущим значением регистра PORTD&nbsp;и результатом предыдущего шага</p>
<p>PORTD = PORTD &amp; 0b11110111</p>
<p>PORTD = PORTD &amp; 0b11100011</p>
<p>4) записать в регистр PORTD&nbsp;результат предыдущей операции.</p>
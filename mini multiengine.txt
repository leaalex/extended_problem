<problem>
<script type="loncapa/python">
from os import urandom
import hashlib
import json

# Включить подсветку неправильных ответов  
enable_error_highlitghing = False
  
#Показать поле ввода ответа
show_input = True

if(show_input):
    show_input = "true"
else:
    show_input = "false"
  
def key():
    key = hashlib.md5(urandom(128)).hexdigest()[:8]
    return "id" + str(key)

unique_id = key()

correct_answer = {"a1":["b1","b10","b11"],"a2":["b2","b3","b9"],"a3":["b5","b6","b7", "b8"]}


def check_answer(expect, ans):
    student_answer = json.loads(ans)
    student_answer = student_answer["ans"]
    max_grade = len(correct_answer.keys())
    grade = 0
    wrong_answers = []
    for key in correct_answer.keys():
        if(set(correct_answer[key]) == set(student_answer[key])):
            grade = grade + 1
        else:
            wrong_answers.append(key)
    grade_decimal = grade / max_grade
    response_json = {}
    if enable_error_highlitghing:
        response_json["wrong_cells"] = wrong_answers
    if grade_decimal == 1: 
        ok = True
    elif grade_decimal == 0: 
        ok = False
    else:
        ok = 'Partial'
    return {'input_list': [{ 'ok': ok, 'msg': str(json.dumps(response_json)), 'grade_decimal':grade_decimal},]}  
</script>

  <script type="text/javascript">


function Answer(field){
      this.field = "#" + field + " input[type=text]";
      this.fieldValue = "";
      this.fieldObject = {};
      this.get = function(){
        this.fieldValue = $(this.field).val();
        return this.fieldValue;
      };
      this.set = function(value){
        if(value == undefined) value = this.fieldValue;
        $(this.field).val(value);
      };
      this.getJSON = function(){
            if (this.isJsonString(this.get())) this.fieldObject = JSON.parse(this.get());
        return this.fieldObject;
      };
      this.setJSON = function(object){
        if(object == undefined) object = this.fieldObject;
         this.set(JSON.stringify(object))
      };
        /* Утилиты */
        /* Проверка строки на возможность преобразования в JSON */
        this.isJsonString = function(str) {
            try {JSON.parse(str);} 
            catch (e) {return false;}
            return true;
        };
    };

var answer_$unique_id = new Answer("$unique_id");
// Получение значения поля для в формате JSON формируется ответ студента
var obj_$unique_id = answer_$unique_id.getJSON();
for (key in obj_$unique_id.ans) for ( l in obj_$unique_id.ans[key]) { $("#$unique_id #" + key).append($("#$unique_id #"+obj_$unique_id.ans[key][l])) }

 
// Сокрытие поля ввода и сообщения
if($show_input != true){
  $(document).ready(function(){$("#$unique_id input[type=text]").hide()});
  $(document).ready(function(){$("#$unique_id span.message").hide()});
}
    
$("#$unique_id .conf-answers-place").sortable({
      connectWith: "#$unique_id .conf-answers-place",
      stop: function() {
        var submitButton = document.querySelector(".$unique_id").querySelector("button.submit");
        submitButton.disabled = false;
        var value_$unique_id={};
        $("#$unique_id .conf-table td.conf-answers-place").map(function(indx, element){
            id = $(element).attr("id");
            value_$unique_id[id] = $(element).find(".conf-item").map(function(index, element){return $(element).attr("id")}).get();
        }).get();
        answer_$unique_id.setJSON({ans:value_$unique_id});
        },
      sort: function() {
        $("#$unique_id .conf-table .conf-answers-place").removeClass("conf-wrong-cell");
      },
    opacity: 0.8,
      over: function(event) { 
        $("#$unique_id #" + event.target.id).css("border","2px dashed #b2b2b2");
    },
      out: function(event) { 
        $("#$unique_id #" + event.target.id).css("border","");
    }
}).disableSelection();

if($("#$unique_id span.message")){
  if( $("#$unique_id span.message").text() != ""){
    var wrongCells = JSON.parse($("#$unique_id span.message").text())["wrong_cells"];
    for (cellId in wrongCells){
      $("#$unique_id .conf-table #" + wrongCells[cellId]).addClass("conf-wrong-cell");
      console.log("#$unique_id .conf-table #" + wrongCells[cellId]);
    }
    
  }
}

</script>

<div id="$unique_id">
  
<table class="conf-table">

  <tr>
    <td class="conf-text">Уровни результатов обучения</td>
    <td class="conf-text">Виды учебных заданий</td>
  </tr>

  <tr>
    <td class="conf-text">Воспроизведение знаний</td>
    <td id="a1" class="conf-answers-place"></td>
  </tr>

  <tr>
    <td class="conf-text">Решение учебных типовых задач</td>
    <td id="a2" class="conf-answers-place"></td>
  </tr>


</table>

  
<div id="conf-id" class= "conf-answers-place conf-all-answers">
    <div id="b1" class="conf-item">задания на изучение нового учебного материала</div>
    <div id="b2" class="conf-item">задания на структурирование нового учебного материала</div>
</div>

<customresponse cfn="check_answer">
     <textline  size="40" label="Enter number" /><br/>
</customresponse>
  
</div>

<style>
  #$unique_id .capa_inputtype{
    text-align: center !important;
  }
#$unique_id .conf-text{
  text-align: center !important;
  padding: 5px !important;
  font-family: "Open Sans","Helvetica Neue",Helvetica,Arial,sans-serif;
}
#$unique_id .conf-wrong-cell{
  border: 2px solid rgb(178, 6, 16) !important;
}

#$unique_id .conf-all-answers{
  min-height: 60px
}
#$unique_id .conf-table td{
  border: 1px solid #b2b2b2;
}

#$unique_id .conf-table{
  width:100%
}

#$unique_id  td.conf-answers-place{
  min-width: 250px;
}

#$unique_id .conf-item{
    display: inline-block;

    max-height: 100px;
    vertical-align: middle;
    /* border-radius: 3px; */
    background: #f3f3f3;
    border: 1px solid #b2b2b2;;
    margin: 3px;
    padding: 4px;
    text-align: center;
    cursor: move;
}

#$unique_id .conf-answers-place{
  background: #f9f9f9;
}

</style>

</problem>